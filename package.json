{
  "name": "@luismdev/api-starter",
  "version": "0.0.1",
  "description": "A starter API for building a full-stack SaaS application",
  "author": "Luis M. Torres",
  "private": true,
  "license": "",
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "scripts": {
    "init": "npm i && npm run prisma:init",
    "start": "node dist/main.js",
    "start:dev": "cp environments/.env.dev .env && nest start --watch",
    "start:pre": "cp environments/.env.pre .env && nest start --watch",
    "start:pro": "cp environments/.env.pro .env && nest start --watch",
    "build:dev": "nest build",
    "build:pre": "nest build",
    "build:pro": "nest build",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/murky-api/test/jest-e2e.json",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "prisma:init": "npm run prisma:generate",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev --name init",
    "prisma:studio": "prisma studio",
    "prisma:seed": "prisma db seed",
    "prisma:reset": "prisma migrate reset",
    "docker:init": " npm run prisma:init && npm run build:pro && npm run start"
  },
  "dependencies": {
    "@arcane-auth/nest-client": "^0.0.26",
    "@aws-sdk/client-s3": "^3.565.0",
    "@bull-board/api": "^5.6.0",
    "@bull-board/express": "^5.6.0",
    "@bull-board/ui": "^5.6.0",
    "@google-cloud/storage": "^7.11.0",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/bullmq": "^10.1.0",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.5",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.3.0",
    "@prisma/client": "^5.13.0",
    "aws-sdk": "^2.1610.0",
    "bcrypt": "^5.1.1",
    "bull": "^4.10.4",
    "bullmq": "^5.2.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cookie-parser": "^1.4.6",
    "dotenv": "^16.4.5",
    "express": "^4.18.2",
    "passport": "^0.7.0",
    "passport-github": "^1.1.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "4.0.1",
    "passport-local": "^1.0.0",
    "passport-oauth2": "1.8.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcrypt": "^5.0.2",
    "@types/cookie-parser": "^1.4.7",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.12.7",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-oauth2": "1.4.15",
    "@types/supertest": "^6.0.0",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.56.0",
    "eslint-config-airbnb-typescript": "17.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "3.6.1",
    "eslint-plugin-cypress": "2.15.1",
    "eslint-plugin-import": "2.29.1",
    "eslint-plugin-jsx-a11y": "6.8.0",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^5.13.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.4.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/"
    ]
  }
}
